<?xml version="1.0" ?>
<launch>
  <arg name="robot_urdf" default="mmint_combined_panda"/>
  <arg name="arm_id_1" default="panda_1"/>
  <arg name="arm_id_2" default="panda_2"/>
  <arg name="hand_1" default="panda_hand"/>
  <arg name="hand_2" default="panda_hand"/>
  <arg name="tool_1" default=""/>
  <arg name="tool_2" default=""/>

  <!-- The path to a robot description (xacro) file to control -->
  <arg name="robot" default="$(find mmint_combined_panda_config)/config/$(arg robot_urdf).urdf.xacro" />

  <!-- The name of the combined robot, used as control node name -->
  <arg name="robot_id" default="combined_panda" />

  <!-- The config file containing all parameters for the combined hardware node like the IPs of the robots etc. -->
  <arg name="hw_config_file" default="$(find franka_control)/config/franka_combined_control_node.yaml"/>

  <!-- Optional arg to manually configure the ips of all robots, overwriting ips that are configured in hw_config_file -->
  <!-- The ips must be set as dictionary like {<arm_id_1>/robot_ip: <my_ip_1>, <arm_id_2>/robot_ip: <my_ip_2>} -->
  <arg name="panda_1_ip" default="192.168.1.22" />
  <arg name="panda_2_ip" default="192.168.1.23" />
  <arg name="robot_ips" default="{panda_1/robot_ip: $(arg panda_1_ip), panda_2/robot_ip: $(arg panda_2_ip)}"/>

  <!-- The config file containing the parameterization for all controllers to start with this launch file -->
  <arg name="controllers_file" default="$(find franka_example_controllers)/config/franka_example_controllers.yaml" />

  <!-- The space separated list of controllers to start in this launch files. The controllers should be known from the controllers_file -->
  <arg name="controllers_to_start" default="panda_1_cartesian_impedance_controller panda_2_cartesian_impedance_controller panda_1_state_controller panda_2_state_controller"/>

  <!-- The list of the joint_states topics of all combined robots to fuse to a complete topic -->
  <arg name="joint_states_source_list" default="[panda_1_state_controller/joint_states, panda_2_state_controller/joint_states, panda_1/franka_gripper/joint_states, panda_2/franka_gripper/joint_states]"/>

  <node name="$(arg robot_id)" pkg="franka_control" type="franka_combined_control_node" output="screen" required="true" >
    <rosparam command="load" file="$(arg hw_config_file)" />
    <!-- Add or overwrite manually configured ips -->
    <rosparam subst_value="True">$(arg robot_ips)</rosparam>
    <param name="robot_description" command="$(find xacro)/xacro '$(find mmint_combined_panda_config)/config/$(arg robot_urdf).urdf.xacro'
                       arm_id_1:=$(arg arm_id_1) arm_id_2:=$(arg arm_id_2)
                       hand_1:=$(arg hand_1) hand_2:=$(arg hand_2)
                       tool_1:=$(arg tool_1) tool_2:=$(arg tool_2)"/>
  </node>

  <group ns="$(arg robot_id)">

    <rosparam command="load" file="$(arg controllers_file)" />
    <node name="hw_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
      args="$(arg controllers_to_start)"/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
    <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
      <param name="robot_description" command="$(find xacro)/xacro '$(find mmint_combined_panda_config)/config/$(arg robot_urdf).urdf.xacro'
                       arm_id_1:=$(arg arm_id_1) arm_id_2:=$(arg arm_id_2)
                       hand_1:=$(arg hand_1) hand_2:=$(arg hand_2)
                       tool_1:=$(arg tool_1) tool_2:=$(arg tool_2)"/>
      <rosparam param="source_list"  subst_value="true">$(arg joint_states_source_list)</rosparam>
      <param name="rate" value="30"/>
    </node>
  </group>
  <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false" />
  <node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_example_controllers)/launch/rviz/mmint_dual_description.rviz"/>
  <node name="left_interactive_marker" pkg="franka_example_controllers" type="mmint_left_interactive_marker.py" required="true" output="screen" />
  <node name="right_interactive_marker" pkg="franka_example_controllers" type="mmint_right_interactive_marker.py" required="true" output="screen" />
</launch>
